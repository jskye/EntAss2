
package stubs;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PaymentWS", targetNamespace = "http://PaymentWebService", wsdlLocation = "file:///Users/juliusskye/ENT/EntAss2Backend/src/PaymentWebService/PaymentWS.wsdl")
public class PaymentWS_Service
    extends Service
{

    private final static URL PAYMENTWS_WSDL_LOCATION;
    private final static WebServiceException PAYMENTWS_EXCEPTION;
    private final static QName PAYMENTWS_QNAME = new QName("http://PaymentWebService", "PaymentWS");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:///Users/juliusskye/ENT/EntAss2Backend/src/PaymentWebService/PaymentWS.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PAYMENTWS_WSDL_LOCATION = url;
        PAYMENTWS_EXCEPTION = e;
    }

    public PaymentWS_Service() {
        super(__getWsdlLocation(), PAYMENTWS_QNAME);
    }

    public PaymentWS_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), PAYMENTWS_QNAME, features);
    }

    public PaymentWS_Service(URL wsdlLocation) {
        super(wsdlLocation, PAYMENTWS_QNAME);
    }

    public PaymentWS_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PAYMENTWS_QNAME, features);
    }

    public PaymentWS_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PaymentWS_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PaymentWS
     */
    @WebEndpoint(name = "PaymentWS")
    public PaymentWS getPaymentWS() {
        return super.getPort(new QName("http://PaymentWebService", "PaymentWS"), PaymentWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PaymentWS
     */
    @WebEndpoint(name = "PaymentWS")
    public PaymentWS getPaymentWS(WebServiceFeature... features) {
        return super.getPort(new QName("http://PaymentWebService", "PaymentWS"), PaymentWS.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PAYMENTWS_EXCEPTION!= null) {
            throw PAYMENTWS_EXCEPTION;
        }
        return PAYMENTWS_WSDL_LOCATION;
    }

}
